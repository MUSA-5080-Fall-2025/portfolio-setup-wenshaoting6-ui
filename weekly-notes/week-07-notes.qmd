---
title: "Tim Wen - Week 6 Notes: Spatial Regression"
date: "2025-09-08"
format:
  html:
    toc: true
    toc-depth: 3
    theme: flatly
---

---
title: "Spatial Model Errors and Moran's I"
format: 
  html:
    toc: true
    toc-location: left
    code-fold: show
    theme: cosmo
---

# Model Errors

Prediction error for observation \(i\):

\[
e_i = \hat{y}_i - y_i
\]

Where:

- \(\hat{y}_i\) = predicted value  
- \(y_i\) = actual value

## Good Errors vs. Bad Errors

### Random errors (good)
- No systematic pattern  
- Scattered across space  
- Prediction equally good everywhere  
- Model captures key relationships  

### Clustered errors (bad)
- Spatial pattern visible  
- Under/over-predict in areas  
- Model misses something about location  
- Need more spatial features!  

### How do we test this?
- Look for **spatial autocorrelation** in the errors

# Moran’s I

Moran’s I measures spatial autocorrelation.

- **Range:** -1 to +1  
- **+1:** Perfect positive correlation (clustering)  
- **0:** Random spatial pattern  
- **-1:** Perfect negative correlation (dispersion)

### Formula

\[
I = \frac{n \sum_i \sum_j w_{ij}(x_i - \bar{x})(x_j - \bar{x})}{\sum_i \sum_j w_{ij} \sum_i (x_i - \bar{x})^2}
\]

Where \(w_{ij}\) = spatial weight between locations \(i\) and \(j\).

### Intuition

- \((x_i - \bar{x})\) = How far is my house’s error from the mean?  
- \((x_j - \bar{x})\) = How far is my neighbor’s error from the mean?  
- Multiply them:  
  - Both positive or both negative → positive product (similar)  
  - Opposite signs → negative product (dissimilar)  
- Sum across all neighbor pairs and normalize  

**Result:**  
- Lots of positive products → High Moran’s I (clustering)  
- Products near zero → Low Moran’s I (random)  
- Negative products → Negative Moran’s I (rare with errors)  

# Defining “Neighbors”

Different ways to define spatial relationships:

- **Contiguity:** Polygons that share a border (Queen vs. Rook)  
- **Distance:** All within X meters (fixed or adaptive threshold)  
- **k-Nearest:** Closest k points  

### Interpretation

- \(I > 0\) and \(p < 0.05\) → Significant clustering  
- \(I \approx 0\) → Random pattern ✅  
- \(I < 0\) → Dispersion (rare with errors)  

# What Moran’s I Tells You

**Decision Framework**

If Moran’s I is high (errors clustered):

- Add more spatial features  
- Try different buffer sizes  
- Include more amenities/disamenities  
- Create neighborhood-specific variables  
- Try spatial fixed effects (neighborhood/grid cell dummies)  
- Consider spatial regression models:  
  - Spatial lag model  
  - Spatial error model (advanced)

If Moran’s I ≈ 0 (random errors):

✅ Your model adequately captures spatial relationships!

# Why Not Spatial Lag Models for Prediction?

## Problems with Spatial Lag:

1. **Simultaneity Problem:**  
   - Including \(WY\) (neighbor prices) creates circular logic  
   - My price affects neighbors → neighbors affect me  
   - OLS estimates are biased and inconsistent

2. **Prediction Paradox:**  
   - Need neighbors’ prices to predict my price  
   - For new developments or future periods, those prices don’t exist  
   - Can’t generalize to new areas

3. **Data Leakage in CV:**  
   - Geographic CV holds out spatial regions  
   - Spatial lag “leaks” information from test set  
   - Artificially good performance

### Our Solution: Spatial Features of \(X\) (Not \(Y\))

| ❌ Spatial Lag | ✅ Our Approach |
|----------------|----------------|
| “Near expensive houses” | “Near low crime areas” |
| Uses neighbor prices | Uses neighbor characteristics |
| Circular logic | Causal mechanism |
| Can’t predict new areas | Generalizes well |

- If Moran’s I shows clustered errors:  
  ✅ Add more spatial features  
  ✅ Try neighborhood fixed effects  
  ✅ Use spatial cross-validation  

- ❌ Don’t add spatial lag of \(Y\) for prediction

# Quick Clarification: Biased vs. Inconsistent

### Biased Estimator

\[
E[\hat{\beta}] \neq \beta
\]

- Expected value ≠ true parameter  
- Systematically wrong on average  
- Example: True effect = 100 → estimate averages 80  

### Inconsistent Estimator

\[
\hat{\beta} \not\to \beta \text{ as } n \to \infty
\]

- Doesn’t converge to true value as sample size increases  
- Problem persists even with infinite data  
- Example: n=100 → estimate=80, n=1,000,000 → estimate=84, never reaches 100

